{"ast":null,"code":"var _jsxFileName = \"/home/mono/reactNative/restaurantcompleto/restaurantcliente/src/components/ui/Orden.js\";\nimport React, { useState, useContext } from 'react';\nimport { FirebaseContext } from \"../../firebase/index\";\n\nconst Orden = ({\n  orden\n}) => {\n  console.log(orden);\n  const [tiempoentrega, guardarTiempoEntrega] = useState(0); // contect de firebase \n\n  const {\n    firebase\n  } = useContext(FirebaseContext); // define el tiempo de entrega en tiemnpo real \n\n  const definirTiempo = id => {\n    console.log(\" dentro de definir Tiempo esta es la id :\", id);\n\n    try {\n      firebase.db.collection(\"ordenes\").doc(id).update({\n        tiempoentrega\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sm:w-1/2 lg:w-1/3 px-2 mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-3 shadow-md bg-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-yellow-600 text-lg font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, orden.id), orden.orden.map(platillos => /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-gray-600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, platillos.cantidad, \" \", platillos.nombre, \" \")), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-gray-700 font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, \" Total a pagar : $ \", orden.total), orden.tiempoentrega === 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }, \"Tiempo entrega\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    min: \"1\",\n    max: \"20\",\n    placeholder: \"Agregar tiempo de entrega\",\n    value: tiempoentrega,\n    onChange: e => guardarTiempoEntrega(parseInt(e.target.value)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => definirTiempo(orden.id),\n    type: \"submit\",\n    className: \"bg-gray-800 hover:bg-gray-900 w-full mt-5 p-2 text-white uppercase font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, \"Definir Tiempo\")), orden.tiempoentrega > 0 && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-gray-700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, \"Tiempo de entrega :\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, orden.tiempoentrega, \" Minutos \")), !orden.completado && /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"bg-blue-800 hover:bg-blue-700 w-full mt-5 p-2 text-white uppercase font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, \"Marcar Como lista\")));\n};\n\nexport default Orden;","map":{"version":3,"sources":["/home/mono/reactNative/restaurantcompleto/restaurantcliente/src/components/ui/Orden.js"],"names":["React","useState","useContext","FirebaseContext","Orden","orden","console","log","tiempoentrega","guardarTiempoEntrega","firebase","definirTiempo","id","db","collection","doc","update","error","map","platillos","cantidad","nombre","total","e","parseInt","target","value","completado"],"mappings":"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","sourcesContent":["import React,{useState,useContext} from 'react';\nimport {FirebaseContext} from \"../../firebase/index\"\n\nconst Orden = ({orden}) => {\n\n    console.log(orden)\n\n    const [tiempoentrega, guardarTiempoEntrega] =useState(0)\n\n    // contect de firebase \n\n    const {firebase} = useContext(FirebaseContext)\n\n    // define el tiempo de entrega en tiemnpo real \n\n    const definirTiempo =(id) =>{\n        console.log(\" dentro de definir Tiempo esta es la id :\" , id)\n        try{\n\n            firebase.db.collection(\"ordenes\")\n                                    .doc(id)\n                                    .update({\n                                        tiempoentrega\n                                    })\n\n        }catch(error){\n            console.log(error)\n        }\n\n    }\n    return (\n        <div className=\"sm:w-1/2 lg:w-1/3 px-2 mb-4\">\n            <div className=\"p-3 shadow-md bg-white\">\n                <h1 className=\"text-yellow-600 text-lg font-bold\">{orden.id}</h1>\n                {orden.orden.map( platillos =>(\n                    <p className=\"text-gray-600\">{platillos.cantidad} {platillos.nombre} </p>\n                ))}\n\n                <p className=\"text-gray-700 font-bold\"> Total a pagar : $ {orden.total}</p>\n\n                {orden.tiempoentrega === 0 && (\n                    <div className=\"mb-4\">\n                        <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                            Tiempo entrega\n                        </label>\n                        \n                        <input \n                            type=\"number\"\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                            min=\"1\"\n                            max=\"20\"\n                            placeholder=\"Agregar tiempo de entrega\"\n                            value={tiempoentrega}\n                            onChange={e => guardarTiempoEntrega(parseInt(e.target.value))}\n                        />\n                        <button\n                            onClick={()=>definirTiempo(orden.id)}\n                            type=\"submit\"\n                            className=\"bg-gray-800 hover:bg-gray-900 w-full mt-5 p-2 text-white uppercase font-bold\"\n                        >\n                            Definir Tiempo\n                        </button>\n\n                    </div>\n                )}\n\n                {orden.tiempoentrega >0 && (\n                    <p className=\"text-gray-700\">\n                        Tiempo de entrega : \n                    <span className=\"font-bold\">{orden.tiempoentrega} Minutos </span>    \n                    </p>\n                )}\n\n                {!orden.completado && (\n                    <button\n                        type=\"button\"\n                        className=\"bg-blue-800 hover:bg-blue-700 w-full mt-5 p-2 text-white uppercase font-bold\"\n                    >\n                        Marcar Como lista\n                    </button>\n                )}\n\n             \n            </div>\n            \n        </div>\n    );\n};\n\nexport default Orden;"]},"metadata":{},"sourceType":"module"}